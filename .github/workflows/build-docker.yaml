name: build basic server and publish docker image
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.5

      - name: Login to Docker
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t nodeserver:latest .
          docker tag nodeserver:latest benn1440/nodeserver:latest
          docker push benn1440/nodeserver:latest


  # argocd-sync:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - name: Install ArgoCD CLI
  #     run: |
  #       curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
  #       sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
  #       rm argocd-linux-amd64

  #   - name: Sync ArgoCD Application
  #     run: |
  #       argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
  #       argocd app sync node-server
  #     env:
  #       ARGOCD_OPTS: --insecure


  #     - name: Set up minikube
  # # You may pin to the exact commit or the version.
  # # uses: sagikazarmark/setup-minikube-action@e6b5846a870453e5a33f9f3064c900db4deb47cd
  # uses: sagikazarmark/setup-minikube-action@v0.0.2
  # with:
  #   # The minikube version to use
  #   version: # optional, default is latest

  #     - name: SSH into EC2 
  # # You may pin to the exact commit or the version.
  # # uses: invi5H/ssh-action@ece33b57060e562f8d17b6c20b715de95204bbf2
  # uses: invi5H/ssh-action@v1.0.0
  # with:
  #   # A unique name for the server
  #   NAME: # optional, default is server
  #   # The SSH username
  #   SSH_USER: 
  #   # The hostname or the IP address
  #   SSH_HOST: 
  #   # The SSH port
  #   SSH_PORT: # optional, default is 22
  #   # The full string SSH key
  #   SSH_KEY: 
  #         run: |

  #              minikube status
  #              kubectl config get-contexts
  #              kubectl config use-context minikube
  #              kubectl apply -f configmap.yaml

                  
          
